import { createRequire as _createRequire } from 'node:module';
const require = _createRequire(import.meta.url);
import {
  HttpClientProvider,
  buildHttpClientHeaders
} from "./chunk-OHMQSHHI.js";
import {
  PanoramaProvider
} from "./chunk-IUJ26DW6.js";
import {
  package_default,
  reportCommandStartEvent
} from "./chunk-IQ26UZAH.js";
import "./chunk-CPSZ7QTC.js";
import {
  BiProvider,
  ErrorReporterProvider
} from "./chunk-KONVQLDI.js";
import "./chunk-WZOSCHKD.js";
import "./chunk-N2KKXUSW.js";
import "./chunk-KJ37XZQA.js";
import {
  render
} from "./chunk-AHOU27PT.js";
import {
  require_react
} from "./chunk-NRAQAV6T.js";
import "./chunk-SQ3KPTIH.js";
import "./chunk-Z4MHKCET.js";
import "./chunk-C4SUTB4O.js";
import "./chunk-IWQIW4GL.js";
import "./chunk-II7O6SCF.js";
import "./chunk-RL7RA2JG.js";
import "./chunk-ZUSQSFTR.js";
import "./chunk-F43XHKVL.js";
import "./chunk-EW4XNYNT.js";
import {
  __toESM,
  init_esm_shims
} from "./chunk-4EFJZ3GQ.js";

// src/commands/render-command.tsx
init_esm_shims();
var import_react = __toESM(require_react(), 1);
async function renderCommand(command, { biLogger, errorReporter, panorama }, tree) {
  await runCommand(command, { biLogger, errorReporter, panorama }, async () => {
    const headers = buildHttpClientHeaders({
      flow: "CLI",
      command: command.name(),
      cliVersion: package_default.version
    });
    await render(
      /* @__PURE__ */ import_react.default.createElement(BiProvider, { value: biLogger }, /* @__PURE__ */ import_react.default.createElement(ErrorReporterProvider, { value: errorReporter }, /* @__PURE__ */ import_react.default.createElement(PanoramaProvider, { value: panorama }, /* @__PURE__ */ import_react.default.createElement(HttpClientProvider, { headers }, tree))))
    );
  });
}
async function runCommand(command, services, commandFn) {
  const commandStatus = reportCommandStartEvent(services.biLogger, command);
  try {
    await commandFn();
    commandStatus.succeed();
  } catch (e) {
    commandStatus.failed(e);
    throw e;
  }
}
export {
  renderCommand
};
//# sourceMappingURL=render-command-4OBSK4BJ.js.map