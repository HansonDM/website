{"version":3,"sources":["../../cli-http-client-react/src/httpClientProvider.tsx","../../cli-http-client-react/src/buildHttpClientHeaders.ts","../../cli-http-client-react/src/index.ts","../../cli-http-client-react/src/useHttpClient.ts"],"sourcesContent":["import type { ReactNode } from 'react';\nimport React, { createContext } from 'react';\n\ninterface HttpClientContext {\n  headers?: Record<string, string>;\n}\n\nexport const HttpClientContext = createContext<HttpClientContext | null>(null);\n\ninterface HttpClientProviderProps {\n  children: ReactNode;\n  headers?: Record<string, string>;\n}\n\nexport const HttpClientProvider = ({\n  children,\n  headers,\n}: HttpClientProviderProps) => {\n  return (\n    <HttpClientContext.Provider value={{ headers }}>\n      {children}\n    </HttpClientContext.Provider>\n  );\n};\n","interface HttpClientHeaders {\n  flow: string;\n  command: string;\n  cliVersion: string;\n}\n\nexport const buildHttpClientHeaders = ({\n  flow,\n  command,\n  cliVersion,\n}: HttpClientHeaders) => {\n  const buildWixBiGatewayHeader = (\n    flow: string,\n    command: string,\n    cliVersion: string\n  ) =>\n    [\n      `environment=CLI-${flow}`,\n      `package-version=${cliVersion}`,\n      `package-name=${command}`,\n    ].join(',');\n\n  return {\n    'x-wix-bi-gateway': buildWixBiGatewayHeader(flow, command, cliVersion),\n  };\n};\n","export { useHttpClient } from './useHttpClient.js';\nexport { HttpClientProvider } from './httpClientProvider.js';\nexport { buildHttpClientHeaders } from './buildHttpClientHeaders.js';\n","import { useContext, useMemo } from 'react';\nimport { useAuth } from '@wix/cli-auth';\nimport type { CreateHttpClientOptions, HttpClient } from '@wix/cli-http-client';\nimport { createHttpClient } from '@wix/cli-http-client';\nimport { HttpClientContext } from './httpClientProvider.js';\n\nexport function useHttpClient({\n  type,\n}: Pick<CreateHttpClientOptions, 'type'>): HttpClient {\n  const context = useContext(HttpClientContext);\n\n  const { getAccessToken: getAppToken, getRequestHeaders: createAuthHeaders } =\n    useAuth();\n\n  return useMemo(\n    () =>\n      createHttpClient({\n        type,\n        getAppToken,\n        createHeaders: () => ({\n          ...createAuthHeaders?.(),\n          ...context?.headers,\n        }),\n      }),\n    [type, getAppToken, createAuthHeaders, context]\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA,mBAAqC;AAM9B,IAAM,wBAAoB,4BAAwC,IAAI;AAOtE,IAAM,qBAAqB,CAAC;AAAA,EACjC;AAAA,EACA;AACF,MAA+B;AAC7B,SACE,6BAAAA,QAAA,cAAC,kBAAkB,UAAlB,EAA2B,OAAO,EAAE,QAAQ,KAC1C,QACH;AAEJ;;;ACvBA;AAMO,IAAM,yBAAyB,CAAC;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AACF,MAAyB;AACvB,QAAM,0BAA0B,CAC9BC,OACAC,UACAC,gBAEA;AAAA,IACE,mBAAmBF,KAAI;AAAA,IACvB,mBAAmBE,WAAU;AAAA,IAC7B,gBAAgBD,QAAO;AAAA,EACzB,EAAE,KAAK,GAAG;AAEZ,SAAO;AAAA,IACL,oBAAoB,wBAAwB,MAAM,SAAS,UAAU;AAAA,EACvE;AACF;;;ACzBA;;;ACAA;AAAA,IAAAE,gBAAoC;AAM7B,SAAS,cAAc;AAAA,EAC5B;AACF,GAAsD;AACpD,QAAM,cAAU,0BAAW,iBAAiB;AAE5C,QAAM,EAAE,gBAAgB,aAAa,mBAAmB,kBAAkB,IACxE,QAAQ;AAEV,aAAO;AAAA,IACL,MACE,iBAAiB;AAAA,MACf;AAAA,MACA;AAAA,MACA,eAAe,OAAO;AAAA,QACpB,GAAG,oBAAoB;AAAA,QACvB,GAAG,SAAS;AAAA,MACd;AAAA,IACF,CAAC;AAAA,IACH,CAAC,MAAM,aAAa,mBAAmB,OAAO;AAAA,EAChD;AACF;","names":["React","flow","command","cliVersion","import_react"]}