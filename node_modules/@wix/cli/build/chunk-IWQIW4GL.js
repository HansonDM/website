import { createRequire as _createRequire } from 'node:module';
const require = _createRequire(import.meta.url);
import {
  getDataDirPath
} from "./chunk-II7O6SCF.js";
import {
  pathExists,
  readJson,
  writeJson
} from "./chunk-ZUSQSFTR.js";
import {
  external_exports
} from "./chunk-F43XHKVL.js";
import {
  init_esm_shims
} from "./chunk-4EFJZ3GQ.js";

// ../cli-user-config/src/index.ts
init_esm_shims();

// ../cli-user-config/src/user-config.ts
init_esm_shims();
import { join as join3 } from "node:path";

// ../cli-core-definitions/src/index.ts
init_esm_shims();
import { join as join2 } from "node:path";

// ../velo-github-layout-definitions/build/index.js
init_esm_shims();
import { join } from "node:path";
function getGitIgnoredFolder(projectFolder = "") {
  return join(projectFolder, ".wix");
}
function getTypesDir(projectFolder) {
  return join(getGitIgnoredFolder(projectFolder), "types");
}
function getSourceFolder(projectFolder) {
  return join(projectFolder, "src");
}
function getPagesFolder(projectFolder = "") {
  return join(getSourceFolder(projectFolder), "pages");
}

// ../cli-core-definitions/src/index.ts
var SENTRY_DSN = "https://d15bb47ad34c428f92d0ac434a5734eb@o37417.ingest.sentry.io/4504116669317120";
var WIX_CONFIG_FILENAME = "wix.config.json";
var WIX_LOCK_FILENAME = "wix.lock";
var VERSION_CACHE_FILENAME = "version.cache.json";
var USER_CONFIG_FILENAME = "user.config.json";
var userConfigSchema = external_exports.object({
  telemetry: external_exports.boolean().default(true),
  tunneling: external_exports.boolean().default(false)
});
function getWixConfigFilePath(projectFolder) {
  return join2(projectFolder, WIX_CONFIG_FILENAME);
}
function getDebugLogFilePath(projectFolder) {
  return join2(getGitIgnoredFolder(projectFolder), "debug.log");
}
function getUserFeedbackCacheFilePath(projectFolder) {
  return join2(getGitIgnoredFolder(projectFolder), "user-feedback.cache.json");
}
function getWixLockFilePath(projectFolder) {
  return join2(projectFolder, WIX_LOCK_FILENAME);
}

// ../cli-user-config/src/user-config.ts
function getUserConfigPath() {
  return join3(getDataDirPath(), USER_CONFIG_FILENAME);
}
async function readUserConfig() {
  const configPath = getUserConfigPath();
  const isConfigExist = await pathExists(configPath);
  const json = isConfigExist ? await readJson(configPath) : {};
  return userConfigSchema.parse(json);
}
async function updateUserConfig(config) {
  const currentConfig = await readUserConfig();
  const newConfig = {
    ...currentConfig,
    ...config
  };
  const configPath = getUserConfigPath();
  await writeJson(configPath, newConfig);
}

export {
  getTypesDir,
  getSourceFolder,
  getPagesFolder,
  SENTRY_DSN,
  WIX_CONFIG_FILENAME,
  WIX_LOCK_FILENAME,
  VERSION_CACHE_FILENAME,
  getWixConfigFilePath,
  getDebugLogFilePath,
  getUserFeedbackCacheFilePath,
  getWixLockFilePath,
  readUserConfig,
  updateUserConfig
};
//# sourceMappingURL=chunk-IWQIW4GL.js.map