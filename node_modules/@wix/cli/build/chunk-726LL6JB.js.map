{"version":3,"sources":["../../cli-astro-commands/src/commands/render-command.tsx"],"sourcesContent":["import { cwd } from 'node:process';\nimport React from 'react';\nimport type { ReactElement } from 'react';\nimport { AccountAuthProvider } from '@wix/cli-auth';\nimport type { UserInfo } from '@wix/cli-auth';\nimport { render } from '@wix/cli-ui-kit';\nimport { DebugLogProvider } from '@wix/cli-debug-log';\nimport { getDebugLogFilePath } from '@wix/cli-core-definitions';\nimport { ErrorReporterProvider } from '@wix/cli-error-reporting';\nimport { BiProvider } from '@wix/cli-telemetry-react';\nimport { addUserFields, reportCommandStartEvent } from '@wix/cli-telemetry';\nimport type { CommandServices } from '@wix/cli-command-contract';\nimport {\n  HttpClientProvider,\n  buildHttpClientHeaders,\n} from '@wix/cli-http-client-react';\nimport type { Command } from '@commander-js/extra-typings';\nimport { PanoramaProvider } from '@wix/cli-panorama';\nimport type { ProjectModel } from '../model.js';\nimport { loadProjectModel, ProjectModelProvider } from '../model.js';\n\nasync function initServices(\n  model: ProjectModel,\n  { biLogger, errorReporter }: CommandServices\n) {\n  errorReporter.setContext('Application Info', {\n    'Application ID': model.config.appId,\n    'Site ID': model.config.siteId,\n  });\n\n  biLogger.updateDefaults({\n    _appId: model.config.appId,\n  });\n}\n\nexport async function renderCommand(\n  command: Command,\n  { biLogger, errorReporter, panorama }: CommandServices,\n  cliVersion: string,\n  tree: ReactElement\n) {\n  await runCommand(\n    command,\n    { biLogger, errorReporter, panorama },\n    cliVersion,\n    async (model) => {\n      biLogger.updateDefaults({ command: command.name() });\n\n      const debugLogFilePath = getDebugLogFilePath(model.projectFolder);\n\n      const handleLogin = (userInfo: UserInfo) => {\n        errorReporter.setUser({ id: userInfo.userId });\n        addUserFields(biLogger, userInfo.userId);\n      };\n\n      const headers = buildHttpClientHeaders({\n        flow: 'Astro',\n        command: command.name(),\n        cliVersion,\n      });\n\n      await render(\n        <BiProvider value={biLogger}>\n          <ErrorReporterProvider value={errorReporter}>\n            <PanoramaProvider value={panorama}>\n              <AccountAuthProvider onLogin={handleLogin}>\n                <HttpClientProvider headers={headers}>\n                  <DebugLogProvider filePath={debugLogFilePath}>\n                    <ProjectModelProvider value={model}>\n                      {tree}\n                    </ProjectModelProvider>\n                  </DebugLogProvider>\n                </HttpClientProvider>\n              </AccountAuthProvider>\n            </PanoramaProvider>\n          </ErrorReporterProvider>\n        </BiProvider>\n      );\n    }\n  );\n}\n\nexport async function runCommand(\n  command: Command,\n  services: CommandServices,\n  cliVersion: string,\n  commandFn: (model: ProjectModel) => Promise<void>\n) {\n  const model = await loadProjectModel(cwd());\n\n  await initServices(model, services);\n\n  services.biLogger.updateDefaults({\n    command: command.name(),\n  });\n\n  const commandStatus = reportCommandStartEvent({\n    biLogger: services.biLogger,\n    command,\n    cliVersion,\n    flow: 'Astro',\n    extensions: {},\n    extraFields: undefined,\n  });\n\n  try {\n    await commandFn(model);\n    commandStatus.succeed();\n  } catch (e) {\n    commandStatus.failed(e);\n    throw e;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,mBAAkB;AADlB,SAAS,WAAW;AAqBpB,eAAe,aACb,OACA,EAAE,UAAU,cAAc,GAC1B;AACA,gBAAc,WAAW,oBAAoB;AAAA,IAC3C,kBAAkB,MAAM,OAAO;AAAA,IAC/B,WAAW,MAAM,OAAO;AAAA,EAC1B,CAAC;AAED,WAAS,eAAe;AAAA,IACtB,QAAQ,MAAM,OAAO;AAAA,EACvB,CAAC;AACH;AAEA,eAAsB,cACpB,SACA,EAAE,UAAU,eAAe,SAAS,GACpC,YACA,MACA;AACA,QAAM;AAAA,IACJ;AAAA,IACA,EAAE,UAAU,eAAe,SAAS;AAAA,IACpC;AAAA,IACA,OAAO,UAAU;AACf,eAAS,eAAe,EAAE,SAAS,QAAQ,KAAK,EAAE,CAAC;AAEnD,YAAM,mBAAmB,oBAAoB,MAAM,aAAa;AAEhE,YAAM,cAAc,CAAC,aAAuB;AAC1C,sBAAc,QAAQ,EAAE,IAAI,SAAS,OAAO,CAAC;AAC7C,sBAAc,UAAU,SAAS,MAAM;AAAA,MACzC;AAEA,YAAM,UAAU,uBAAuB;AAAA,QACrC,MAAM;AAAA,QACN,SAAS,QAAQ,KAAK;AAAA,QACtB;AAAA,MACF,CAAC;AAED,YAAM;AAAA,QACJ,6BAAAA,QAAA,cAAC,cAAW,OAAO,YACjB,6BAAAA,QAAA,cAAC,yBAAsB,OAAO,iBAC5B,6BAAAA,QAAA,cAAC,oBAAiB,OAAO,YACvB,6BAAAA,QAAA,cAAC,uBAAoB,SAAS,eAC5B,6BAAAA,QAAA,cAAC,sBAAmB,WAClB,6BAAAA,QAAA,cAAC,oBAAiB,UAAU,oBAC1B,6BAAAA,QAAA,cAAC,wBAAqB,OAAO,SAC1B,IACH,CACF,CACF,CACF,CACF,CACF,CACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,eAAsB,WACpB,SACA,UACA,YACA,WACA;AACA,QAAM,QAAQ,MAAM,iBAAiB,IAAI,CAAC;AAE1C,QAAM,aAAa,OAAO,QAAQ;AAElC,WAAS,SAAS,eAAe;AAAA,IAC/B,SAAS,QAAQ,KAAK;AAAA,EACxB,CAAC;AAED,QAAM,gBAAgB,wBAAwB;AAAA,IAC5C,UAAU,SAAS;AAAA,IACnB;AAAA,IACA;AAAA,IACA,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,IACb,aAAa;AAAA,EACf,CAAC;AAED,MAAI;AACF,UAAM,UAAU,KAAK;AACrB,kBAAc,QAAQ;AAAA,EACxB,SAAS,GAAG;AACV,kBAAc,OAAO,CAAC;AACtB,UAAM;AAAA,EACR;AACF;","names":["React"]}